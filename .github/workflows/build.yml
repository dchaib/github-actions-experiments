name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.2.0
      with:
        versionSpec: '5.x'
    - name: Display GitVersion config
      id: gitversion
      uses: gittools/actions/gitversion/execute@v1.2.0
    - run: |
        echo "FullSemVer (env.fullSemVer)            : ${{ env.fullSemVer }}"
      name: Display GitVersion variables (without prefix)

    - run: |
        echo "FullSemVer (env.GitVersion_FullSemVer) : ${{ env.GitVersion_FullSemVer }}"
      name: Display GitVersion variables (with prefix)

    - run: |
        echo "FullSemVer (steps.gitversion.outputs.fullSemVer)            : ${{ steps.gitversion.outputs.fullSemVer }}"
      name: Display GitVersion outputs (step output without prefix)
    - run: |
        echo "FullSemVer (steps.gitversion.outputs.GitVersion_FullSemVer) : ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}"
      name: Display GitVersion outputs (step output with prefix)
    - run: |
        echo "FullSemVer (env.myvar_fullSemVer)            : ${{ env.myvar_fullSemVer }}"
      name: Display mapped local env (outputs without prefix)
      env:
        myvar_fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
    - run: |
        echo "FullSemVer (env.myvar_GitVersion_FullSemVer) : ${{ env.myvar_GitVersion_FullSemVer }}"
      name: Display mapped local env (outputs with prefix)
      env:
        myvar_GitVersion_FullSemVer: ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}
    - run: |
        echo "FullSemVer (env.myvar_fullSemVer)            : $env:myvar_fullSemVer"
      name: Display mapped local env (pwsh - outputs without prefix)
      shell: pwsh
      env:
        myvar_fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
    - run: |
        echo "FullSemVer (env.myvar_GitVersion_FullSemVer) : $env:myvar_GitVersion_FullSemVer"
      name: Display mapped local env (pwsh - outputs with prefix)
      shell: pwsh
      env:
        myvar_GitVersion_FullSemVer: ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}
    - run: |
        echo "FullSemVer (myvar_fullSemVer)            : $myvar_fullSemVer"
      name: Display mapped local env (bash - outputs without prefix)
      shell: bash
      env:
        myvar_fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
    - run: |
        echo "FullSemVer (myvar_GitVersion_FullSemVer) : $myvar_GitVersion_FullSemVer"
      name: Display mapped local env (bash - outputs with prefix)
      shell: bash
      env:
        myvar_GitVersion_FullSemVer: ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}
    - name: Publish
      run: dotnet publish --no-restore --no-build /p:AssemblyVersion=${{ steps.gitversion.outputs.GitVersion_AssemblySemVer }} /p:Version=${{ steps.gitversion.outputs.GitVersion_FullSemVer }}
    - name: Push Package to GitHub
      run: dotnet nuget push --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" **/*.nupkg
